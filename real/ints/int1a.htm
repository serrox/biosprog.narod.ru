<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<title>Низкоуровневое програмирование</title>
	<meta name="keywords" content="программирование, BIOS, INT, INT 1A, INT 1Ah, реальный режим, ассемблер, 16bit, таймер, RTC, real mode" />
	<meta name="description" content="Низкоуровневое программирование: Прерывания БИОС: INT 1Ah: Функции таймера." />
</head>
<body>
<!-- Yandex.Metrika counter -->
<script type="text/javascript">
(function (d, w, c) {
    (w[c] = w[c] || []).push(function() {
        try {
            w.yaCounter2269369 = new Ya.Metrika({id:2269369,
                    accurateTrackBounce:true});
        } catch(e) { }
    });

    var n = d.getElementsByTagName("script")[0],
        s = d.createElement("script"),
        f = function () { n.parentNode.insertBefore(s, n); };
    s.type = "text/javascript";
    s.async = true;
    s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js";

    if (w.opera == "[object Opera]") {
        d.addEventListener("DOMContentLoaded", f, false);
    } else { f(); }
})(document, window, "yandex_metrika_callbacks");
</script>
<noscript><div><img src="//mc.yandex.ru/watch/2269369" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
<!-- /Yandex.Metrika counter -->
	<a href=../../index.htm>Главная</a> - <a href=../index.htm> Реальный режим </a> - <a href=int.htm>Прерывания Bios</a> - <b>INT 1Ah: Ввод/вывод таймера и сервисы PCI BIOS.</b><br />
	<h2>INT 1Ah: Ввод/вывод таймера и сервисы PCI BIOS.</h2>
<!-- добавить ф-и 08 (System timer ISR) 1C 4A 70(RTC ISR)-->
	<div style="font-size: 13pt">Данное прерывание реализует несколько наборов API</div><br/>
	<h3>Оглавление</h3>
	<ul>
		<li><a href="#time">API времени</a></li>
		<li><a href="#pci">API PCI BIOS</a></li>
	</ul>
	<a name=time><h3>API времени</h3></a>
	<table width=100% border=1><tr><td>AH</td><td>Функция</td></tr><tr><td valign=top>
	0</td><td> Читать кванты времени<br /><br/>
		<b>Выход:</b><br/>
		CX,DX - кол-во квантов времени со времени последней полуночи (CX-старшая часть значения)<br />
		AL != 0 - было переполнение таймера<br/><br/>
		<b>Примечание:</b><br/>
		На большинстве систем в секунду умещается 18,2 кванта.<br/>
		AL устанавливается в 1, если с момента включения уже была полночь, иначе в ноль.</td></tr><tr><td valign=top>
	1</td><td> Установить кванты времени<br /><br/>
		<b>Выход:</b><br/>
		CX,DX - кол-во квантов времени (CX-старшая часть значения)<br/><br/>
		<b>Примечание:</b><br/>
		На большинстве систем в секунду умещается 18,2 кванта.<br/>
		Флаг переполнения таймера сбрасывается</td></tr><tr><td valign=top>
	2</td><td> Читать часы (RTC)<br /><br/>
		<b>Выход:</b><br/>
		CH - Часы в коде BCD<br />
		CL - Минуты в коде BCD<br />
		DH - Секунды в коде BCD<br />
		DL - если 1, то используется перевод времени между летним/зимним, если 0 - то нет.<br/>
		флаг CF установлен, если часы отключены.<br/><br/>
		<b>Примечание:</b><br />
		<b><font color=red>Только AT-совместимые компьютеры</font></b><br/>
		Некоторые БИОСы не сбрасывают флаг CF при удачном выполнении функции, по-этому рекомендуется самостоятельно его збрасывать перед вызовом этой функции.</td></tr><tr><td valign=top>
	3</td><td> Установить часы (RTC)<br /><br/>
		<b>Вход:</b><br/>
		CH - Часы в коде BCD<br />
		CL - Минуты в коде BCD<br />
		DH - Секунды в коде BCD<br />
		DL - если 1, то используется перевод времени между летним/зимним, если 0 - то нет.<br /><br/>
		<b>Выход:</b><br/>
		AL - значение, записанное в CMOS-регист 0Bh<br/><br/>
		<b>Примечание:</b><br />
		<b><font color=red>Только AT-совместимые компьютеры</font></b><br/>
		AH может быть сброшен в ноль.</td></tr><tr><td valign=top>
	4</td><td> Читать дату (RTC)<br /><br/>
		<b>Выход:</b><br/>
		CH - Столетие в коде BCD<br />
		CL - Год в коде BCD<br />
		DH - Месяц в коде BCD<br />
		DL - День в коде BCD<br />
		флаг CF установлен, если часы отключены.<br/><br/>
		<b>Примечание:</b><br />
		<b><font color=red>Только AT-совместимые компьютеры</font></b><br/>
		Некоторые БИОСы не сбрасывают флаг CF при удачном выполнении функции, по-этому рекомендуется самостоятельно его збрасывать перед вызовом этой функции.<br /></td></tr><tr><td valign=top>
	5</td><td> Установить дату (RTC)<br /><br/>
		<b>Вход:</b><br/>
		CH - Столетие в коде BCD<br />
		CL - Год в коде BCD<br />
		DH - Месяц в коде BCD<br />
		DL - День в коде BCD<br /><br/>
		<b>Выход:</b><br/>
		AL - значение, записанное в CMOS-регист 0Bh<br/><br/>
		<b>Примечание:</b><br />
		<b><font color=red>Только AT-совместимые компьютеры</font></b><br/>
		AH может быть сброшен в ноль.</td></tr><tr><td valign=top>
	<a nem="6">6</a></td><td>Установить сигнал<br /><br />
		<b>Вход:</b><br/>
		CH - Часы в коде BCD<br />
		CL - Минуты в коде BCD<br />
		DH - Секунды в коде BCD<br />
		флаг CF установлен, если часы отключены или таймер уже установлен.<br /><br/>
		<b>Примечание:</b><br />
		<b><font color=red>Только AT-совместимые компьютеры</font></b><br />
		В указаное время генерирует прерывание int 4Ah</td></tr><tr><td valign=top>
	7</td><td> Сбросить сигнал<br />
		<b><font color=red>Только AT-совместимые компьютеры</font></b><br/>
		Отменяет действие <a href="#6">функции 6</a></td></tr>
	</table>
	<br/>
	<a name=pci><h3>API PCI BIOS</h3></a><br/>
	Этот апи реализуется через функцию B1h, т.е. в AH необходимо передавать значение B1h<br/>
	Функции того API могут потребовать до 1Кб стека<br/>
	<table width=100% border=1><tr><td>AL</td><td>Функция</td></tr><tr><td valign=top>
	01</td><td>Проверить наличие PCI BIOS<br /><br/>
		<b>Вход:</b><br/>
		EDI = 0<br/><br/>
		<b>Выход:</b><br/>
		AH = 0 и флаг переноса сброшен, если PCI BIOS присутствует<br />
		AH - <a href="#retcodes">код возврата</a>.<br />
		EDX = 20494350h<br />
		AL - Флаги PCI:<br />
		&nbsp;&nbsp;&nbsp;&nbsp; бит 0 : метод доступа к конфигурации №1 поддерживается<br />
		&nbsp;&nbsp;&nbsp;&nbsp; бит 1 : метод доступа к конфигурации №2 поддерживается<br />
		&nbsp;&nbsp;&nbsp;&nbsp; биты 2-3 : резерв<br />
		&nbsp;&nbsp;&nbsp;&nbsp; бит 4 : механизм генерации специальных циклов №1 поддерживается<br />
		&nbsp;&nbsp;&nbsp;&nbsp; бит 5 : механизм генерации специальных циклов №2 поддерживается<br />
		&nbsp;&nbsp;&nbsp;&nbsp; биты 6-7 : резерв<br />
		BH - старший номер версии интерфейса (в формате BCD)<br />
		BL - младший номер версии интерфейса (в формате BCD)<br />
		CL - номер последней шины PCI<br />
		EDI - точка входа 32-х битного интерфейса<br /><br/>
		<b>Примечание:</b><br />
		Регистры EAX, EBX, ECX и EDX могут быть изменены<br/>
		Если биос не поддерживает 32-х битную точку входа, то регистр EDI не изменяется.</td></tr><tr><td valign=top>
	02</td><td>Найти устройство по его ID<br /><br/>
		<b>Вход:</b><br/>
		CX - ID устройства<br />
		DX - ID изготовителя<br />
		SI - номер устройства<br/><br/>
		<b>Выход:</b><br/>
		AH - <a href="#retcodes">код возврата</a>.<br />
		BH - номер шины<br />
		BL - биты 7-3 : номер устройства, биты 2-0: номер функции<br /><br/>
		<b>Примечание:</b><br />
		Регистры EAX, EBX, ECX и EDX могут быть изменены<br/>
		SI введён для случая, когда в системе есть несколько одинаковых устойств. Нумерация начинается с нуля. Что бы найти все такие устройства, надо повторять вызовы этой функции, увеличивая SI, пока в AH не будет возвращён код 86h</td></tr><tr><td valign=top>
	03</td><td>Найти устройство по его классу<br /><br/>
		<b>Вход:</b><br/>
		ECX - класс устройства:<br/>
		&nbsp;&nbsp;&nbsp;&nbsp; биты 0 - 7 : интерфейс<br/>
		&nbsp;&nbsp;&nbsp;&nbsp; биты 15- 8 : подкласс<br/>
		&nbsp;&nbsp;&nbsp;&nbsp; биты 23-16 : класс<br/>
		&nbsp;&nbsp;&nbsp;&nbsp; биты 31-24 : сброшенны<br/>
		SI - номер устройства<br/><br/>
		<b>Выход:</b><br/>
		AH - <a href="#retcodes">код возврата</a>.<br />
		BH - номер шины<br />
		BL - биты 7-3 : номер устройства, биты 2-0: номер функции<br /><br/>
		<b>Примечание:</b><br />
		Регистры EAX, EBX, ECX и EDX могут быть изменены<br/>
		SI введён для случая, когда в системе есть несколько одинаковых устойств. Нумерация начинается с нуля. Что бы найти все такие устройства, надо повторять вызовы этой функции, увеличивая SI, пока в AH не будет возвращён код 86h</td></tr><tr><td valign=top>
	06</td><td>Сгенерировать специальный цикл шины<br /><br/>
		<b>Вход:</b><br/>
		BH - номер шины<br/>
		EDX - данные<br/><br/>
		<b>Выход:</b><br/>
		AH - <a href="#retcodes">код возврата</a>.<br/><br/>
		<b>Примечание:</b><br />
		Регистры EAX, EBX, ECX и EDX могут быть изменены</td></tr><tr><td valign=top>
	08</td><td>Прочитать байт конфигурации<br /><br/>
		<b>Вход:</b><br/>
		BH - номер шины<br />
		BL - биты 7-3 : номер устройства, биты 2-0: номер функции<br />
		DI - смещение<br/><br/>
		<b>Выход:</b><br/>
		AH - <a href="#retcodes">код возврата</a>.<br />
		CL - считанный байт<br /><br/>
		<b>Примечание:</b><br />
		Регистры EAX, EBX, ECX и EDX могут быть изменены<br/>
		Award BIOS 4.51PG (датирован 05/24/96) при номере функции, отличном от нуля всегда возвращает нулевой байт конфигурации равным FFh.</td></tr><tr><td valign=top>
	09</td><td>Прочитать слово конфигурации<br /><br/>
		<b>Вход:</b><br/>
		BH - номер шины<br />
		BL - биты 7-3 : номер устройства, биты 2-0: номер функции<br />
		DI - смещение<br/><br/>
		<b>Выход:</b><br/>
		AH - <a href="#retcodes">код возврата</a>.<br />
		CX - считанное слово<br /><br/>
		<b>Примечание:</b><br />
		Регистры EAX, EBX, ECX и EDX могут быть изменены<br/>
		DI должно быть чётным<br/>
		Award BIOS 4.51PG (датирован 05/24/96) при номере функции, отличном от нуля всегда возвращает нулевое слово конфигурации равным FFFFh.</td></tr><tr><td valign=top>
	0Ah</td><td>Прочитать двойное слово конфигурации<br /><br/>
		<b>Вход:</b><br/>
		BH - номер шины<br />
		BL - биты 7-3 : номер устройства, биты 2-0: номер функции<br />
		DI - смещение<br/><br/>
		<b>Выход:</b><br/>
		AH - <a href="#retcodes">код возврата</a>.<br />
		ECX - считанное двойное слово<br /><br/>
		<b>Примечание:</b><br />
		Регистры EAX, EBX, ECX и EDX могут быть изменены<br/>
		DI должно быть кратно 4-м<br/>
		Award BIOS 4.51PG (датирован 05/24/96) при номере функции, отличном от нуля всегда возвращает нулевое слово конфигурации равным FFFFFFFFh.</td></tr><tr><td valign=top>
	0Bh</td><td>Записать байт конфигурации<br /><br/>
		<b>Вход:</b><br/>
		BH - номер шины<br />
		BL - биты 7-3 : номер устройства, биты 2-0: номер функции<br />
		DI - смещение<br/>
		CL - записываемый байт<br /><br/>
		<b>Выход:</b><br/>
		AH - <a href="#retcodes">код возврата</a>.<br /><br/>
		<b>Примечание:</b><br />
		Регистры EAX, EBX, ECX и EDX могут быть изменены</td></tr><tr><td valign=top>
	0Ch</td><td>Записать слово конфигурации<br /><br/>
		<b>Вход:</b><br/>
		BH - номер шины<br />
		BL - биты 7-3 : номер устройства, биты 2-0: номер функции<br />
		DI - смещение<br/>
		CX - записываемое слово<br /><br/>
		<b>Выход:</b><br/>
		AH - <a href="#retcodes">код возврата</a>.<br /><br/>
		<b>Примечание:</b><br />
		Регистры EAX, EBX, ECX и EDX могут быть изменены<br/>
		DI должно быть чётным</td></tr><tr><td valign=top>
	0Dh</td><td>Записать двойное слово конфигурации<br /><br/>
		<b>Вход:</b><br/>
		BH - номер шины<br />
		BL - биты 7-3 : номер устройства, биты 2-0: номер функции<br />
		DI - смещение<br/>
		ECX - считанное двойное слово<br /><br/>
		<b>Выход:</b><br/>
		AH - <a href="#retcodes">код возврата</a>.<br /><br/>
		<b>Примечание:</b><br />
		Регистры EAX, EBX, ECX и EDX могут быть изменены<br/>
		DI должно быть кратно 4-м</td></tr><tr><td valign=top>
	0Eh</td><td>Получить информацию о перенаправлении прерываний PCI<br /><br/>
		<b>Вход:</b><br/>
		BX = 0<br/>
		DS = Сегмент данных PCI BIOS (стандартное значение - F000h)<br/>
		ES:EDI - Заголовок таблицы перенаправления прерываний<br /><br/>
		<b>Выход:</b><br/>
		AH - <a href="#retcodes">код возврата</a>. Если AH = 59h или 89h, то таблица слишком маленькая, а в слове по адресу ES:DI записан необходимый размер<br />
		BX - битовая маска, описывающая, какие IRQ используются исключительно шинами PCI (бит 0 - IRQ 0, ... , бит 15 - IRQ 15)<br />
		ES:DI - размер заполненных данных<br/>
		Таблица перенаправления прерываний заполнена<br/><br/>
		<b>Примечание:</b><br />
		Заголовок таблицы перенаправления прерываний выглядит следующим образом:
		<table border=1 width=100%><tr><td>Смещение</td><td>Размер</td><td>Смысл</td></tr><tr><td valign=top>
		  00</td><td>WORD</td><td>Размер таблицы перенаправления прерываний в байтах</td></tr><tr><td valign=top>
		  02</td><td>DWORD</td><td>Указатель на таблицу перенаправления прерываний</td></tr>
		</table>
		Таблица перенаправления прерываний является массивом, состоящим из элементов следующего вида:
		<table border=1 width=100%><tr><td>Смещение</td><td>Размер</td><td>Смысл</td></tr><tr><td valign=top>
		  00</td><td>BYTE</td><td>номер шины</td></tr><tr><td valign=top>
		  01</td><td>BYTE</td><td>биты 7-3: номер устройства</td></tr><tr><td valign=top>
		  02</td><td>BYTE</td><td>линия сигнала INTA#</td></tr><tr><td valign=top>
		  03</td><td>WORD</td><td>битовая маска сопоставления сигнала INTA# и номера IRQ</td></tr><tr><td valign=top>
		  05</td><td>BYTE</td><td>линия сигнала INTB#</td></tr><tr><td valign=top>
		  06</td><td>WORD</td><td>битовая маска сопоставления сигнала INTB# и номера IRQ</td></tr><tr><td valign=top>
		  08</td><td>BYTE</td><td>линия сигнала INTC#</td></tr><tr><td valign=top>
		  09</td><td>WORD</td><td>битовая маска сопоставления сигнала INTC# и номера IRQ</td></tr><tr><td valign=top>
		  0Bh</td><td>BYTE</td><td>линия сигнала INTD#</td></tr><tr><td valign=top>
		  0Ch</td><td>WORD</td><td>битовая маска сопоставления сигнала INTD# и номера IRQ</td></tr><tr><td valign=top>
		  0Eh</td><td>BYTE</td><td>Номер слота (00 - материнская плата)</td></tr><tr><td valign=top>
		  0Fh</td><td>BYTE</td><td>резерв</td></tr>
		</table>	</td></tr><tr><td valign=top>
	0Fh</td><td>Установить IRQ<br /><br/>
		<b>Вход:</b><br/>
		BH - номер шины<br />
		BL - биты 7-3 : номер устройства, биты 2-0: номер функции<br />
		CL - изменяемый сигнал ( 0Ah - сигнал INTA#, ... , 0Dh - сигнал INTD#)<br/>
		CH - новый номер IRQ<br/>
		DS = Сегмент данных PCI BIOS (стандартное значение - F000h)<br /><br/>
		<b>Выход:</b><br/>
		AH - <a href="#retcodes">код возврата</a>.<br/><br/>
		<b>Примечание:</b><br />
		Эта функция исходит из того, что вызвавшая её программа проверила отсутствие конфликтов через таблицу перенаправления прерываний, и изменяет номер прерывания для всех устройств, использующих ту же линию, которую использует это устройство для указанного сигнала</td></tr>
	</table>
<br />
<a name="retcodes">Коды возврата PCI BIOS</a>
<table border=1 width=100%>
<tr><td>Код</td><td>Значение</td></tr><tr><td valign=top>
00</td><td>Успешно</td></tr><tr><td valign=top>
81h</td><td>Неизвестная функция</td></tr><tr><td valign=top>
83h</td><td>Неправильный Vendor ID</td></tr><tr><td valign=top>
86h</td><td>Устройство не найдено</td></tr><tr><td valign=top>
87h</td><td>Неправильный номер регистра PCI</td></tr><tr><td valign=top>
88h</td><td>Неудалось задать новое значение</td></tr><tr><td valign=top>
89h</td><td>Буфер слишком маленький</td></tr>
</table>
</body>
</html>